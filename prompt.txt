I want you to generate a full static website called "HelpHub – Salesforce Knowledge Base". The website should be fully static, internally linked, responsive, and ready to host on GitHub Pages. Include **all files** described below. All content should be Salesforce-themed and meaningful.

---

### 1. index.html (Homepage)
- Title: "HelpHub – Salesforce Knowledge Base"
- Navigation bar with links: FAQs, Product Guides, Policies, Blog
- Hero section: Big headline, subheadline, fake search bar (non-functional)
- "Explore HelpHub" section with cards linking to each main page (FAQs, Guides, Policies, Blog)
- Footer with dummy contact info and placeholder social links

---

### 2. faq.html (FAQ Page)
- Same header/nav + footer as index.html
- Page banner with "FAQs" heading and short description
- 10 meaningful Salesforce FAQs using <h2> for the question and <p> for 2–3 paragraph answers
- Example topics: account setup, password reset, Salesforce Lightning, reports & dashboards, Flow automation, user permissions, data import, record tracking, integration, customer support

---

### 3. guides.html (Product Guides)
- Same header/nav + footer
- Page banner with "Product Guides" heading
- At least 3 guides with structured content:
  1. Getting Started with Salesforce
  2. Troubleshooting Connectivity Issues
  3. Advanced Tips for Admins and Users
- Use <h2>, <h3>, <p>, and <ul> for structured formatting
- Content should be meaningful and Salesforce-related

---

### 4. policies.html (Policies Page)
- Same header/nav + footer
- Page banner with "Policies" heading
- Include 3 policies: 
  1. Salesforce Data Privacy Policy
  2. Salesforce Usage Policy
  3. Salesforce Refund & Service Policy
- Each policy 3–4 paragraphs long, meaningful and realistic

---

### 5. blog.html (Blog Page)
- Same header/nav + footer
- Page banner with "Blog" heading
- Include 3 meaningful Salesforce blog posts, ~400 words each
- Use <h2> for titles, <small> for metadata, <p> for content
- Topics: Lightning productivity, data management tips, automation best practices

---

### 6. style.css
- Global reset
- Modern font: Segoe UI
- Blue theme (#004aad primary, #007bff gradient)
- Responsive navigation bar
- Hero section styling for homepage
- Page banner styling for other pages
- Card grid styling for homepage
- Readable content containers for FAQs, guides, policies, blog
- Responsive design for mobile/tablet

---

### 7. sitemap.xml
- Include:
  /
  /faq.html
  /guides.html
  /policies.html
  /blog.html

---

### 8. robots.txt
- Allow all user agents
- Reference sitemap.xml

---

### 9. README.md
- Project overview
- Folder structure
- Features
- GitHub Pages deployment instructions:
  1. Create a repository
  2. Upload files
  3. Enable GitHub Pages from main branch / root folder
  4. Website URL format
- Contact info
- All instructions should be Salesforce-themed and realistic

---

### Instructions:
- All internal links must be relative
- Website must be fully static and ready for GitHub Pages hosting
- Provide **complete content for all pages**, including FAQs, guides, policies, and blog posts
- Output each file in **full**, with proper HTML structure and formatting
- Ensure content is meaningful, professional, and tailored around Salesforce usage, best practices, and administration
